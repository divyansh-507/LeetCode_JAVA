/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode newlist = null,tmp = new ListNode(0);

        while(list1 != null && list2 != null){
            if(list1.val <= list2.val){
                tmp.next = new ListNode(list1.val);
                list1 = list1.next;
            }
            else {
                tmp.next = new ListNode(list2.val);
                list2 = list2.next;
            }
            if(newlist == null)
                newlist = tmp.next;

            System.out.println(tmp.val);
            tmp = tmp.next;
        }
        while(list1 != null){
            tmp.next = new ListNode(list1.val);
            list1 = list1.next;
            if(newlist == null)
            newlist = tmp.next;

            tmp = tmp.next;
        }

        while(list2 != null){
            tmp.next = new ListNode(list2.val);
            list2 = list2.next;
            if(newlist == null)
            newlist = tmp.next;

            tmp = tmp.next;
        }
        return newlist;
    }
}
